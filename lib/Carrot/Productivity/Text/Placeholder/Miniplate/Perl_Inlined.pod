=pod

=head1 NAME

Carrot::Productivity::Text::Placeholder::Miniplate::Perl_Inlined - execute Perl code

=head1 SYNOPSIS

	$class_names->provide(
		my $template_class = '::Productivity::Text::Placeholder::Template');

	my $template = $template_class->constructor(
		my $counter = '::Perl_Inlined');
	$template->compile('Result: [= return("Hello World.") =]');

	print ${$template->execute()}, "<-\n";

=head1 DESCRIPTION

Adding this placeholder group may be a security risk depending on the actual use. It's only a proof-of-concept module.

Carrot::Productivity::Text::Placeholder::Miniplate::Perl_Inlined provides no specific placeholders. Instead any placeholder is treated as perl code.


=head1 METHOD REFERENCE (API)

=over 8

=item clear

Clears the three generic lexicals $data, @data and %data.

=item subject($code)

Sets or gets the code to be executed.

=back

=head1 KNOWN BUGS AND LIMITATIONS

This is the first public release.

=head1 AUTHOR

Winfried Trumper E<lt>pub+perl(a)wt.tuxomania.netE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2011 Winfried Trumper

This module is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut
